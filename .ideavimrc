" Source .vimrc
source ~/.vimrc

" Keep the mode that was enabled before starting a refactoring
set idearefactormode=visual

" Highlight selection on yank (emulates vim-highlightedyank)
set highlightedyank

" Surrounding commands (emulates vim-surround)
set surround

" Commentary commands (emulates vim-commentary)
set commentary

" Extended matching with % (emulates matchit)
set matchit

" Text objects for entire buffers (emulates vim-textobj-entire)
set textobj-entire

" Unique character highlighting (emulates quick-scope)
set quickscope

" Tree explorer (emulates NERDTree)
set NERDTree
map <C-t> :NERDTreeToggle<CR>
map <leader>tt :NERDTreeToggle<CR>
map <leader>tf :NERDTreeFind<CR>

" Tabs
noremap <leader>[t :tabprevious<cr>
noremap <leader>]t :tabnext<cr>
noremap <tab>[ :tabprevious<cr>
noremap <tab>] :tabnext<cr>
noremap <tab>a :tabnew<cr>
noremap <tab>d :tabclose<cr>

" IDE mappings
map <leader>== <Action>(ReformatCode)

map <leader>[c <Action>(VcsShowPrevChangeMarker)
map <leader>]c <Action>(VcsShowNextChangeMarker)

map <leader>[e <Action>(GotoPreviousError)
map <leader>]e <Action>(GotoNextError)

map <leader>[f <Action>(MethodUp)
map <leader>]f <Action>(MethodDown)

map <leader><space> <Action>(RecentFiles)
map <leader>ff <Action>(GotoFile)
map <leader>fh <Action>(LocalHistory.ShowHistory)
map <leader>fr <Action>(RecentFiles)
map <leader>fu <Action>(FindUsages)

map gd <Action>(GotoDeclaration)
map <leader>gd <Action>(GotoDeclaration)

map <leader>gi <Action>(GotoImplementation)

map <leader>gg <Action>(CheckinProject)

map <leader>rf <Action>(RenameFile)
map <leader>rn <Action>(RenameElement)

map <leader>cp <Action>(CopyPathFromRepositoryRootProvider)

map <silent>K <Action>(QuickJavaDoc)
map <leader>e <Action>(ShowErrorDescription)

map <leader>ga <Action>(ShowIntentionActions)

" IDE commands
command! Zen action ToggleDistractionFreeMode
