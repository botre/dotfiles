#!/usr/bin/env bash

set -e

junk_applications=(
    "gnome-boxes"
    "gnome-calendar"
    "gnome-clocks"
    "gnome-contacts"
    "gnome-maps"
    "gnome-shell-extension-ubuntu-dock"
    "gnome-text-editor"
    "gnome-tour"
    "gnome-weather"
    "rhythmbox"
    "simple-scan"
    "yelp"
)

declare -A apt_applications
apt_applications=(
    ["file"]=""
    ["procps"]=""
    ["curl"]=""
    ["build-essential"]=""
    ["git"]=""
    ["snapd"]=""
    ["libfuse2"]=""
    ["zsh"]=""
    ["yadm"]=""
    ["kitty"]=""
    ["gnome-online-accounts"]=""
    ["gnome-shell-extensions"]=""
    ["gnome-shell-extension-manager"]=""
    ["gnome-tweaks"]=""
)

flatpak_applications=(
    "com.google.Chrome"
    "com.jetbrains.IntelliJ-IDEA-Ultimate"
    "com.slack.Slack"
    "com.spotify.Client"
    "com.transmissionbt.Transmission"
    "md.obsidian.Obsidian"
    "org.mozilla.firefox"
    "org.videolan.VLC"
)

snap_applications=(
    "1password"
    "google-cloud-cli"
    "ticktick"
)

declare -A app_image_applications
app_image_applications=(
    ["beeper"]="https://download.beeper.com/linux/appImage/x64"
)

# Function to check if a package is installed
is_installed() {
    dpkg -s "$1" &> /dev/null
}

# Remove junk applications
for package in "${junk_applications[@]}"; do
    if is_installed "$package"; then
        echo "Removing $package..."
        sudo apt remove -y "$package"
    else
        echo "$package is not installed. Skipping..."
    fi
done

sudo apt update && sudo apt upgrade -y

# Install APT applications
for name in "${!apt_applications[@]}"; do
    repo=${apt_applications[$name]}
    if ! is_installed "$name"; then
        if [ -n "$repo" ]; then
            sudo add-apt-repository -y "$repo"
        fi
        echo "Installing $name..."
        sudo apt install -y "$name"
    else
        echo "$name is already installed. Skipping..."
    fi
done

# Install Flatpak if not already installed
if ! command -v flatpak &> /dev/null; then
    echo "Installing Flatpak..."
    sudo apt install -y flatpak
    flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
else
    echo "Flatpak is already installed. Skipping..."
fi

# Install Flatpak applications
for app in "${flatpak_applications[@]}"; do
    if ! flatpak list | grep -q "$app"; then
        echo "Installing $app..."
        flatpak install -y flathub "$app"
    else
        echo "$app is already installed. Skipping..."
    fi
done

# Install Snap applications
for app in "${snap_applications[@]}"; do
    name=$(echo "$app" | cut -d' ' -f1)
    if ! snap list | grep -q "$name"; then
        echo "Installing $app..."
        sudo snap install "$app" --classic
    else
        echo "$app is already installed. Skipping..."
    fi
done

# Install AppImage applications
for name in "${!app_image_applications[@]}"; do
    url=${app_image_applications[$name]}
    if ! command -v "$name" &> /dev/null; then
        echo "Installing $name..."
        wget -O "/tmp/$name" "$url"
        chmod +x "/tmp/$name"
        sudo mv "/tmp/$name" "/usr/local/bin/$name"
    else
        echo "$name is already installed. Skipping..."
    fi
done

# Install Homebrew if not already installed
if ! command -v brew &> /dev/null; then
    echo "Installing Homebrew..."
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
else
    echo "Homebrew is already installed. Skipping..."
fi

# Install Brew applications
if [ -f "$HOME/Brewfile" ]; then
    brew bundle
fi

create_desktop_file() {
    local file_name="$1"
    local display_name="$2"
    local exec="$3"
    local icon="$4"
    local desktop_file="/usr/share/applications/${file_name}.desktop"

    sudo tee "$desktop_file" > /dev/null <<EOT
[Desktop Entry]
Name=$display_name
Exec=$exec
Icon=$icon
Type=Application
Categories=Utility;
EOT
}

# Create desktop files
echo "Creating desktop files..."
create_desktop_file "beeper" "Beeper" "beeper --no-sandbox" "$HOME/icons/beeper.png"

sudo apt autoremove -y

echo "Done"
